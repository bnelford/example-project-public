stages:
  - lint
  - analyze
  - build
  - deploy

before_script:
  - apt-get update
  - apt-get install -y cppcheck clang-tidy clang git

lint:
  stage: lint
  script:
    - cppcheck --enable=all --inconclusive --std=c99 --suppress=missingIncludeSystem hello.c
  allow_failure: false
  only:
    - merge_requests
    - branches

analyze:
  stage: analyze
  script:
    - clang-tidy hello.c -- -std=c99
  allow_failure: false
  only:
    - merge_requests
    - branches

build:
  stage: build
  script:
    - gcc -o hello hello.c
  only:
    - merge_requests
    - branches

deploy:
  stage: deploy
  before_script:
  - apt-get update
  - apt-get install -y git
  - git config --global user.email "nelfordbc@gmail.com"
  - git config --global user.name "Beau Nelford"
  script:
    - git init
    - git remote set-url origin https://github.com/bnelford/example-project-public.git
    - git fetch origin
    - git checkout -b deployment
    - git reset --hard origin/main
    - git add .
    - git commit -m "Deploying code" || echo "No changes to commit"
    - git push -f origin deployment
  environment:
    name: production
    url: https://github.com/bnelford/example-project-public
  only:
    - main
  when: manual
  allow_failure: false
