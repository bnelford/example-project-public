stages:
  - lint
  - analyze
  - build
  - deploy

before_script:
  - apt-get update
  - apt-get install -y cppcheck clang-tidy clang git

lint:
  stage: lint
  script:
    - cppcheck --enable=all --inconclusive --std=c99 --suppress=missingIncludeSystem hello.c
  allow_failure: false
  only:
    - merge_requests
    - branches

analyze:
  stage: analyze
  script:
    - clang-tidy hello.c -- -std=c99
  allow_failure: false
  only:
    - merge_requests
    - branches

build:
  stage: build
  script:
    - gcc -o hello hello.c
  only:
    - merge_requests
    - branches

deploy:
  stage: deploy
  before_script:
  - apt-get update
  - apt-get install -y git
  - git config --global user.email "nelfordbc@gmail.com"
  - git config --global user.name "bnelford"
  script:
    # Clone the GitLab repository
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - cd ${CI_PROJECT_NAME}
    # Add GitHub as a remote
    - git remote add github https://oauth2:${GITHUB_TOKEN}@github.com/bnelford/example-project-public.git
    # Force push to the GitHub repository
    - git push -f github main:main
  environment:
    name: production
    url: https://github.com/bnelford/example-project-public
  only:
    - main
  when: manual
  allow_failure: false
